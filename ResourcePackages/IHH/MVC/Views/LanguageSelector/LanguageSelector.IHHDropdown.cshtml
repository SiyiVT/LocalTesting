@model Telerik.Sitefinity.Frontend.Navigation.Mvc.Models.LanguageSelector.LanguageSelectorViewModel

@using System.Configuration
@using Telerik.Sitefinity.Services;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Modules.Pages;
@using SitefinityWebApp.Helpers;

@Html.Script(ScriptRef.JQuery, "top", false)

@{ string CssClass = !string.IsNullOrEmpty(Model.CssClass) ? @Model.CssClass : "js-language";}

@{
    string cdnHost = string.IsNullOrEmpty(ConfigurationManager.AppSettings["HostCDN"]) ? "~/" : ConfigurationManager.AppSettings["HostCDN"];
}
<div class="language-select-div d-lg-block d-none">
    <div class="dropdown">
        <button class="btn btn-secondary dropdown language-select mb-lg-0 mb-3 @CssClass" type="button" data-bs-toggle="dropdown" data-culture="@Model.CurrentLanguage" aria-expanded="false">
            @GetCustomLanguageName(Model.CurrentLanguage)
            @if (Model.Languages.Count > 0)
                {
                    <i class="fa fa-chevron-down"></i>
                }
        </button>
        @if (Model.Languages.Count > 0)
            {
                <ul class="dropdown-menu">
                    @foreach (var language in Model.Languages)
                    {
                        <li>
                            @if (SystemManager.IsDesignMode)
                            {
                                <a class="dropdown-item" href="" onclick="return false;">@GetCustomLanguageName(language.Culture)</a>
                            }
                            else
                            {
                                if (language.Culture == "en")
                                {
                                    <a class="dropdown-item" href="@GetCustomUrl(language.Culture, HttpContext.Current.Request.RawUrl)" data-testing="@FrontendUrlHelper.GetCurrentPageAbsolutePath()" data-cul="@GetCustomLanguageName(language.Culture)">@GetCustomLanguageName(language.Culture)</a>
                                }
                                else
                                {
                                    <a class="dropdown-item" href="" data-testing="@FrontendUrlHelper.GetCurrentPageAbsolutePath()" onclick="openLink('@language.Culture'); return false;" data-cul="@GetCustomLanguageName(language.Culture)">@GetCustomLanguageName(language.Culture)</a>
                                }

                            }
                        </li>
                    }
                </ul>
            }

    </div>
</div>
@*Resolves the class that will be added for each language link depending whether it is the current language*@
@helper GetClass(string culture)
{
    /**/

    if (Model.CurrentLanguage == culture)
    {
        @Html.Raw("selected");
    }
}

@helper GetCustomLanguageName(string culture)
{


    switch (culture)
    {
        case "zh-CHS":
            {
                @Html.Raw("CHI"); break;
            }
        case "en":
            {
                @Html.Raw("EN"); break;
            }
        case "ms":
            {
                @Html.Raw("BM"); break;
            }
        default:
            {
                @Html.Raw(culture.ToUpper()); break;
            }
    }
}

@helper GetCustomUrl(string culture, string rawUrl)
{
    string currentlanguage = Model.CurrentLanguage;

    if (currentlanguage != "en")
    {
        switch (culture)
        {
            case "en":
                {
                    string removeStr = "/" + currentlanguage;
                    string newUrl = rawUrl.Substring(removeStr.Length);
                    if (newUrl != "")
                    {
                        @Html.Raw(newUrl);
                    }
                    else
                    {
                        @Html.Raw("/");
                    }
                    break;
                }
        }

    }

}

@Html.Script(Url.WidgetContent(cdnHost + "Frontend-Assembly/Telerik.Sitefinity.Frontend.Navigation/Mvc/Scripts/LanguageSelector/language-selector.js"), "bottom", false) 