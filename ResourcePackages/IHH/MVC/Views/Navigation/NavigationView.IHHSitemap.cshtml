@model Telerik.Sitefinity.Frontend.Navigation.Mvc.Models.INavigationModel

@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Navigation.Mvc.Models;
@using Telerik.Sitefinity.Modules.Pages;

@*Add scripts and stylesheets*@

@Html.Script(Url.Content("~/ResourcePackages/Bootstrap5/assets/dist/js/bootstrap.min.js"), "frameworks", false)



<div class="container">
    <h2>Sitemap</h1>
    <div class="grid-container">
        <div class="sitemap-block @Model.CssClass">
            @foreach (var node in Model.Nodes)
            {
                <div class="sitemap-item">
                    @RenderRootLevelNode(node)
                </div>
            }
        </div>
    </div>
</div>
@*Here is specified the rendering for the root level*@
@helper RenderRootLevelNode(NodeViewModel node)
{
    if (node.ChildNodes.Count > 0)
    {
        <div class="sitemap-caption">@node.Title</div>
        <ul class="sitemap-list">
            @foreach (var childNode in node.ChildNodes)
            {
                @RenderSubLevelsRecursive(childNode)
            }
        </ul>
    }
    else
    {


        <a href="@node.Url" class="sitemap-caption">@node.Title</a>
    }
}

@*Here is specified the rendering for the sub levels*@
@helper RenderSubLevelsRecursive(NodeViewModel node)
{
    <li>

        <a href="@node.Url">@node.Title</a>
        @if (node.ChildNodes.Count > 0)
        {
            <ul class="sitemap-list">
                @foreach (var childNode in node.ChildNodes)
                {
                    @RenderSubLevelsRecursive(childNode)
                }
            </ul>
        }
    </li>

}
