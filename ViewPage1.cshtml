@model Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Models.DynamicContentListViewModel

@using System;
@using System.Linq;
@using System.Configuration
@using System.Globalization;
@using System.Collections.Generic;

@using Telerik.Sitefinity.Frontend.DynamicContent.Mvc.Helpers
@using Telerik.Sitefinity.DynamicModules.Builder.Web.UI
@using Telerik.Sitefinity.Frontend.DynamicContent.WidgetTemplates.Fields.Helpers;
@using Telerik.Sitefinity;
@using Telerik.Sitefinity.Utilities.TypeConverters;
@using Telerik.Sitefinity.Data.ContentLinks;
@using Telerik.Sitefinity.Frontend.Mvc.Helpers;
@using Telerik.Sitefinity.Frontend.Mvc.Models;
@using Telerik.Sitefinity.Web.DataResolving;
@using Telerik.Sitefinity.Model.ContentLinks;
@using Telerik.Sitefinity.Modules.Pages;
@using Telerik.Sitefinity.Model;
@using Telerik.Sitefinity.DynamicModules;
@using Telerik.Sitefinity.Data.Linq.Dynamic;
@using Telerik.Sitefinity.DynamicModules.Model;
@using Telerik.Sitefinity.GenericContent.Model;
@using Telerik.Sitefinity.Security;
@using Telerik.Sitefinity.Lifecycle;
@using Telerik.Sitefinity.Data;
@using Telerik.Sitefinity.Versioning;
@using Telerik.Sitefinity.RelatedData;
@using Telerik.Sitefinity.Libraries.Model;
@using Telerik.Sitefinity.Modules.Libraries;
@using SitefinityWebApp.Helpers;

@using Telerik.OpenAccess;
@using Telerik.Sitefinity.Taxonomies;
@using Telerik.Sitefinity.Taxonomies.Model;

@{

    string cdnHost = FrontendUrlHelper.GetCDNHost();

    //get hospital url
    var hosp = FrontendUrlHelper.GetHospitalOrSegmentFromUrl(IHHConstants.HospitalName);

    string viewUrlName = FrontendUrlHelper.GetCurrentViewName();

    var hospitals = ManagerHelper.GetHospitalDynamicContents().ToList();

    var airlinesItem = Model.Items;

    bool isHospital = false;

    if (FrontendUrlHelper.IsHospitalPage())
    {

        //airlinesItem = airlinesItem.Where(w => w.Fields.RelatedHospital != null && w.Fields.RelatedHospital.Any(x=>x.Fields.UrlName.Contains(hosp));
        airlinesItem = Model.Items.Where(w => w.Fields.RelatedHospitals != null);


        isHospital = true;
    }

    int count = 0;

    TaxonomyManager taxonomyManager = TaxonomyManager.GetManager();

    @*var locationList = new List<string>();
    foreach (var item in airlinesItem)
    {
        foreach (var hos in item.Fields.RelatedHospitals)
        {
            if (hos.Fields.location != null)
            {
                if (hos.GetFlatTaxon("location") != null)
                {
                    locationList.Add(hos.GetFlatTaxon("location").Title.ToString());
                    <p>@hos.GetFlatTaxon("location").Title.ToString()</p>
                }
            }
        }
    }*@

    string currentHosLocation = "TEST123";

    DynamicContent hospital = ManagerHelper.GetDynamicContentsByUrlName(IHHConstants.HospitalTypeFullName, hosp);

    List<ITaxon> locationList = new List<ITaxon>();

    if (hospital != null)
    {
        locationList = ManagerHelper.GetTaxonomies(hospital, "location");

    }


}

<div class="heading-section no-form">
    <div class="heading-wrapper">
        <h1 class="heading-title">Airlines</h1>
    </div>
</div>

<div class="main-content m-t-0">
    @foreach (var loc in locationList)
    {
        <p>@loc.ToString()</p>
    }
    <p>@hosp</p>
    <p>test: @currentHosLocation</p>
    <div>
        <select name="location" id="ddlLocation">
            <option value="">Your Preferred Location</option>
            @foreach (var location in locationList)
            {
                if (currentHosLocation == location.ToString())
                {
                    <option value="@location" selected>@location.ToString()</option>
                }
                else
                {
                    <option value="@location.ToString()">@location.ToString()</option>
                }

            }
        </select>
    </div>
    @if (isHospital)
    {
        <h3>@ManagerHelper.GetHospitalTitle()</h3>

        foreach (var item in airlinesItem)
        {
            foreach (var hos in item.Fields.RelatedHospitals)
            {
                if (hos.Fields.UrlName.Contains(hosp))
                {
                    <p> Airline: @item.Fields.Title</p>

                }

            }

        }
    }
    else
    {
        <h3> Global </h3>
        foreach (var item in airlinesItem.Take(4))
        {
            <p> Airline: @item.Fields.Title</p>

        }
    }

</div>